{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/ReactCurso/hola-mundo/src/components/container/task_list.jsx\";\nimport React from 'react';\nimport { LEVELS } from '../../models/levels.enum';\nimport { Task } from '../../models/task.class';\nimport TaskComponent from '../pure/task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  const dafeultTask = new Task('Example', 'Default Description', false, LEVELS.NORMAL);\n  const changeState = id => {\n    console.log('TODO: Cambiar estado de una tarea');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Tarea:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskComponent, {\n      task: dafeultTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","LEVELS","Task","TaskComponent","jsxDEV","_jsxDEV","TaskList","dafeultTask","NORMAL","changeState","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","task","_c","$RefreshReg$"],"sources":["/home/alejandro/ReactCurso/hola-mundo/src/components/container/task_list.jsx"],"sourcesContent":["import React from 'react';\nimport { LEVELS } from '../../models/levels.enum';\nimport { Task } from '../../models/task.class'\nimport TaskComponent from '../pure/task';\n\nconst TaskList = () => {\n\n    const dafeultTask = new Task( 'Example', 'Default Description', false, LEVELS.NORMAL);\n\n    const changeState = ( id ) => {\n        console.log( 'TODO: Cambiar estado de una tarea' )\n    }\n\n\n\n    return (\n        <div>\n            <div>\n                Tarea:\n            </div>\n            { /* TODO: Aplicar un For/Map para renderizar una lista*/}\n            <TaskComponent task={ dafeultTask }></TaskComponent>\n        </div>\n    );\n};\n\n\n\nexport default TaskList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,aAAa,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAEnB,MAAMC,WAAW,GAAG,IAAIL,IAAI,CAAE,SAAS,EAAE,qBAAqB,EAAE,KAAK,EAAED,MAAM,CAACO,MAAM,CAAC;EAErF,MAAMC,WAAW,GAAKC,EAAE,IAAM;IAC1BC,OAAO,CAACC,GAAG,CAAE,mCAAmC,CAAE;EACtD,CAAC;EAID,oBACIP,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAENZ,OAAA,CAACF,aAAa;MAACe,IAAI,EAAGX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAiB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEd,CAAC;AAACE,EAAA,GAnBIb,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}